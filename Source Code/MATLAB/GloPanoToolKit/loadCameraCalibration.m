function [Rcmap,xyzmap,Parmap,Posmap,...
    lookmap,looknmap] = loadCameraCalibration(nviews)
% Description: This function loads the camera calibrations generated by
% FIT. Derived from Dr. Matthew Kay's original code.
%
% Inputs:
% nviews = If the input is a single value between 1-5 the camera
% corresponding to these values (see camLabels variable) will be loaded.
% If a vector, the values between 1-5 will be used to load the
% corresponding calibrations.
% camLabels = camera characters for assembling calibration file names
% camAng = angle numbers for assembling calibration file names
%
% Outputs:
% Rcmap = the rotation  matrices (camera orientation)
% xyzmap = the tranlation values (camera position)
% Parmap = internal camera parameters
% Posmap = external camera parameters
% lookmap = camera view
% looknmap = normalized camera view
%
% Author: Christopher Gloschat
% Date: April 25, 2017
%
% Modification Log:
%
%
%% CODE %%
% Grab the current directory
current_dir = pwd;
% Navigate to the calibration directory
[calPath] = uigetdir('../','Navigate to Calibration directory.');
cd(calPath)
% Variables for assembling calibration file names
camLabels = 'ABCDG';
camAng = [45 315 225 135 45];
% Preallocate variables
Rcmap = zeros(4,4,length(nviews));
xyzmap = zeros(length(nviews),4);
Parmap = zeros(8,length(nviews));
Posmap = zeros(6,length(nviews));

% Step through each camera
for n = nviews
    % Grab camera parameters for each CMOS camera
    pospar=load(sprintf('cal%s_%0.3d.pospar',camLabels(n),camAng(n)));
    % Compute variables need for rotation matrix
    wa=pospar(4)*pi/180;  % omega, Wx rotation (world basis, x axis)
    pa=pospar(5)*pi/180;  % psi, y rotation  (world basis, y axis)
    ra=pospar(6)*pi/180;  % kappa, z rotation (world basis, z axis)
    cw=cos(wa); sw=sin(wa);
    cp=cos(pa); sp=sin(pa);
    cr=cos(ra); sr=sin(ra);
    R=zeros(3,3);
    
    % Populate R with rotation matrix from the CMOS cameras
    R(:,1)=[cr*cp -sr*cw+cr*sp*sw sr*sw+cr*sp*cw]';
    R(:,2)=[sr*cp cr*cw+sr*sp*sw -cr*sw+sr*sp*cw]';
    R(:,3)=[-sp cp*sw cp*cw]';
    % Combine R with translation matrix to create tranformation matrix
    Rcmap(:,:,n)=[[R'; [0 0 0]] [pospar(1) pospar(2) pospar(3) 1]'];
    
    % Compute xyz positions of orbit from calibration matricies
    xyzmap(n,:)=(Rcmap(:,:,n)\[0 0 0 1]')';
    Parmap(:,n)=pospar(7:14);
    Posmap(:,n)=pospar(1:6);
end

% Grab camera view directions
lookmap=ones(size(Rcmap,3),4);
looknmap=ones(size(Rcmap,3),3);
for n = 1:size(Rcmap,3)
    lookmap(n,:)=(Rcmap(1:4,1:4,n)\[0 0 1 1]')';       % camera view direction
    lookmap(n,1:3)=lookmap(n,1:3)-xyzmap(n,1:3);            % camera view direction
    looknmap(n,:)=lookmap(n,1:3)./norm(lookmap(n,1:3));     % normalized view direction
end

%Return to the original directory
cd(current_dir)
end